#!/usr/bin/env bash

set -e

command:search-repo() {
  get-args query
  if [[ ! $query =~ (^| )in: ]]; then
    query+=" in:name"
  fi
  query="${query// /%20}"
  local key_prefix=/items
  report-list \
    "/search/repositories?q=$query;per_page=PER_PAGE" \
    'full_name stargazers_count'
}

format-entry:search-repo() {
  local number=$1 repo=$2 stars=$3
  if "$raw_output"; then
    echo "$repo"
  else
    printf "%d) %-40s (%d stars)\n" "$number" "$repo" "$stars"
  fi
}

command:search-user() {
  get-args query
  if [[ ! $query =~ (^| )in: ]]; then
    query+=" in:login"
  fi
  query="${query// /%20}"
  local key_prefix=/items
  report-list \
    "/search/users?q=$query;per_page=PER_PAGE" \
    'login'
}

format-entry:search-user() {
  local number=$1 login=$2
  if "$raw_output"; then
    echo "$login"
  else
    printf "%d) %-40s\n" "$number" "$login"
  fi
}

command:search-issues() {
  get-args query
  query="${query// /%20}"
  local key_prefix=/items
  report-list \
    "/search/issues?q=$query;per_page=PER_PAGE" \
    'number repository_url title'
}

format-entry:search-issues() {
  local number=$2 url=$3 title=$4
  url="${url/https:\/\/api.github.com\/repos\//}"
  if "$raw_output"; then
    printf "$url\t$number\n"
  else
    printf "%5s %-40s %s\n" "#$number" "$url" "$title"
  fi
}

# vim: set lisp:

